{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Text, View } from \"../components/Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    setRefreshing(false);\n  }, []);\n\n  var postingsClicked = function postingsClicked() {\n    navigation.navigate(\"Postings\");\n  };\n\n  var clubsClicked = function clubsClicked() {\n    navigation.navigate(\"Clubs\");\n  };\n\n  var newReleaseClicked = function newReleaseClicked() {\n    navigation.navigate(\"NewRelease\");\n  };\n\n  return _jsx(ScrollView, {\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }),\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Welcome, Hoya\"\n      }), _jsx(TouchableWithoutFeedback, {\n        onPress: newReleaseClicked,\n        children: _jsx(View, {\n          style: styles.subContainer,\n          children: _jsx(Text, {\n            style: styles.subTitle,\n            children: \"New Release\"\n          })\n        })\n      }), _jsx(TouchableWithoutFeedback, {\n        onPress: postingsClicked,\n        children: _jsx(View, {\n          style: styles.subContainer,\n          children: _jsx(Text, {\n            style: styles.subTitle,\n            children: \"Browse Postings\"\n          })\n        })\n      }), _jsx(TouchableWithoutFeedback, {\n        onPress: clubsClicked,\n        children: _jsx(View, {\n          style: styles.subContainer,\n          children: _jsx(Text, {\n            style: styles.subTitle,\n            children: \"Search Clubs\"\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  title: {\n    fontSize: 26,\n    fontWeight: \"bold\"\n  },\n  subTitle: {\n    fontSize: 20\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  },\n  subContainer: {\n    flex: 1,\n    borderWidth: 2,\n    padding: 10,\n    marginTop: 20,\n    borderColor: \"green\"\n  }\n});","map":{"version":3,"sources":["/Users/justin/Documents/Georgetown/GDT/HoyaHacks/client/screens/DashboardScreen.tsx"],"names":["React","Text","View","DashboardScreen","navigation","useState","refreshing","setRefreshing","onRefresh","useCallback","postingsClicked","navigate","clubsClicked","newReleaseClicked","styles","container","title","subContainer","subTitle","StyleSheet","create","flex","padding","fontSize","fontWeight","separator","marginVertical","height","width","borderWidth","marginTop","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  RefreshControl,\n  ScrollView,\n  StyleSheet,\n  Touchable,\n  TouchableWithoutFeedback,\n} from \"react-native\";\n\nimport EditScreenInfo from \"../components/EditScreenInfo\";\nimport { Text, View } from \"../components/Themed\";\nimport { RootTabScreenProps } from \"../types\";\nimport PostingsScreen from \"./PostingsScreen\";\n\nexport default function DashboardScreen({\n  navigation,\n}: RootTabScreenProps<\"Dashboard\">) {\n  const [refreshing, setRefreshing] = React.useState(false);\n\n  const onRefresh = React.useCallback(() => {\n    setRefreshing(true);\n    // TODO: Make API call to refresh data\n    setRefreshing(false);\n  }, []);\n\n  const postingsClicked = () => {\n    navigation.navigate(\"Postings\");\n  };\n\n  const clubsClicked = () => {\n    navigation.navigate(\"Clubs\");\n  };\n\n  const newReleaseClicked = () => {\n    navigation.navigate(\"NewRelease\");\n  };\n\n  return (\n    <ScrollView\n      refreshControl={\n        <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n      }\n    >\n      <View style={styles.container}>\n        <Text style={styles.title}>Welcome, Hoya</Text>\n        <TouchableWithoutFeedback onPress={newReleaseClicked}>\n          <View style={styles.subContainer}>\n            <Text style={styles.subTitle}>New Release</Text>\n          </View>\n        </TouchableWithoutFeedback>\n        <TouchableWithoutFeedback onPress={postingsClicked}>\n          <View style={styles.subContainer}>\n            <Text style={styles.subTitle}>Browse Postings</Text>\n          </View>\n        </TouchableWithoutFeedback>\n        <TouchableWithoutFeedback onPress={clubsClicked}>\n          <View style={styles.subContainer}>\n            <Text style={styles.subTitle}>Search Clubs</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 26,\n    fontWeight: \"bold\",\n  },\n  subTitle: {\n    fontSize: 20,\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n  subContainer: {\n    flex: 1,\n    borderWidth: 2,\n    padding: 10,\n    marginTop: 20,\n    borderColor: \"green\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}